
CREATE TABLE TEACHER (
    TEACHER_ID  NUMBER PRIMARY KEY,
    NAME    VARCHAR2(100) NOT NULL,
    EMAIL   VARCHAR2(100) UNIQUE,
    HIRE_DATE  DATE,
    SUBJECT  VARCHAR2(100)
    );
    
COMMENT ON COLUMN TEACHER.TEACHER_ID IS '강사 고유번호';
COMMENT ON COLUMN TEACHER.NAME IS '강사 이름';
COMMENT ON COLUMN TEACHER.EMAIL IS '이메일 주소';
COMMENT ON COLUMN TEACHER.HIRE_DATE IS '입사일';
COMMENT ON COLUMN TEACHER.SUBJECT IS '전공 분야';
    
INSERT INTO TEACHER (TEACHER_ID, NAME, EMAIL, HIRE_DATE, SUBJECT) 
VALUES (1, '일길동', 'il@a.com', TO_DATE('2025-01-01', 'YYYY-MM-DD'), 'Java');

INSERT INTO TEACHER (TEACHER_ID, NAME, EMAIL, HIRE_DATE, SUBJECT) 
VALUES (2, '이닐동', 'e@b.com', TO_DATE('2025-02-01', 'YYYY-MM-DD'), 'SQL');

INSERT INTO TEACHER (TEACHER_ID, NAME, EMAIL, HIRE_DATE, SUBJECT) 
VALUES (3, '삼딜동', 'sam@c.com', TO_DATE('2025-03-01', 'YYYY-MM-DD'), 'Python');

INSERT INTO TEACHER (TEACHER_ID, NAME, EMAIL, HIRE_DATE, SUBJECT) 
VALUES (4, '사릴동', 'sa@d.com', TO_DATE('2025-04-01', 'YYYY-MM-DD'), 'web');

INSERT INTO TEACHER (TEACHER_ID, NAME, EMAIL, HIRE_DATE, SUBJECT) 
VALUES (5, '오밀동', 'o@e.com', TO_DATE('2025-05-01', 'YYYY-MM-DD'), 'devops');


-------------------------------------------------------------------
CREATE TABLE LECTURE (
    LECTURE_ID      NUMBER PRIMARY KEY,
    TITLE           VARCHAR2(100) NOT NULL,
    TEACHER_ID      NUMBER,
    INDEX_COUNT     NUMBER DEFAULT 0,
    CATEGORY        VARCHAR2(100),
    START_DATE      DATE NOT NULL,
    END_DATE        DATE,
    
    CONSTRAINT FK_LECTURE_TEACHER
        FOREIGN KEY (TEACHER_ID)
        REFERENCES TEACHER(TEACHER_ID)
);

COMMENT ON COLUMN LECTURE.LECTURE_ID IS '강의 고유번호';
COMMENT ON COLUMN LECTURE.TITLE IS '강의 제목';
COMMENT ON COLUMN LECTURE.TEACHER_ID IS '강의 담당 강사의 ID';
COMMENT ON COLUMN LECTURE.INDEX_COUNT  IS '수강인원';
COMMENT ON COLUMN LECTURE.CATEGORY  IS '강의 분류';
COMMENT ON COLUMN LECTURE.START_DATE  IS '강의 시작일';
COMMENT ON COLUMN LECTURE.END_DATE   IS  '강의 종료일';

INSERT INTO LECTURE (LECTURE_ID, TITLE, TEACHER_ID, INDEX_COUNT, CATEGORY, START_DATE, END_DATE) 
VALUES (101, '자바 기초', 1, 10, '프로그래밍', TO_DATE('2025-05-01', 'YYYY-MM-DD'), TO_DATE('2025-08-01', 'YYYY-MM-DD'));

INSERT INTO LECTURE (LECTURE_ID, TITLE, TEACHER_ID, INDEX_COUNT, CATEGORY, START_DATE, END_DATE) 
VALUES (102, 'sql 기초', 2, 20, '데이터베이스', TO_DATE('2025-06-01', 'YYYY-MM-DD'), TO_DATE('2025-09-01', 'YYYY-MM-DD'));

INSERT INTO LECTURE (LECTURE_ID, TITLE, TEACHER_ID, INDEX_COUNT, CATEGORY, START_DATE, END_DATE) 
VALUES (103, '파이썬 기초', 3, 30, '프로그래밍', TO_DATE('2025-07-01', 'YYYY-MM-DD'), TO_DATE('2025-10-01', 'YYYY-MM-DD'));

INSERT INTO LECTURE (LECTURE_ID, TITLE, TEACHER_ID, INDEX_COUNT, CATEGORY, START_DATE, END_DATE) 
VALUES (104, '웹 기초', 4, 40, '웹개발', TO_DATE('2025-08-01', 'YYYY-MM-DD'), TO_DATE('2025-11-01', 'YYYY-MM-DD'));

INSERT INTO LECTURE (LECTURE_ID, TITLE, TEACHER_ID, INDEX_COUNT, CATEGORY, START_DATE, END_DATE) 
VALUES (105, 'DevOps 기초', 5, 50, '시스템', TO_DATE('2025-09-01', 'YYYY-MM-DD'), TO_DATE('2025-12-01', 'YYYY-MM-DD'));

----------------------------------------------------------------

CREATE TABLE STUDENT (
    STUDENT_ID      NUMBER PRIMARY KEY,
    NAME            VARCHAR2(50) NOT NULL,
    GRADE           NUMBER NOT NULL,
    EMAIL           VARCHAR2(100),
    JOIN_DATE       DATE
);

COMMENT ON COLUMN STUDENT.STUDENT_ID IS '수강생 고유번호';
COMMENT ON COLUMN STUDENT.NAME IS '수강생 이름';
COMMENT ON COLUMN STUDENT.GRADE IS '학년 또는 수강 등급';
COMMENT ON COLUMN STUDENT.EMAIL IS '수강생 이메일';
COMMENT ON COLUMN STUDENT.JOIN_DATE IS '등록일';

INSERT INTO STUDENT (STUDENT_ID, NAME, GRADE, EMAIL, JOIN_DATE) 
VALUES (1, '일이삼', 1, 'ilesam@a.com', TO_DATE('2023-08-01', 'YYYY-MM-DD'));

INSERT INTO STUDENT (STUDENT_ID, NAME, GRADE, EMAIL, JOIN_DATE) 
VALUES (2, '사오육', 2, 'saoyuk@b.com', TO_DATE('2023-08-02', 'YYYY-MM-DD'));

INSERT INTO STUDENT (STUDENT_ID, NAME, GRADE, EMAIL, JOIN_DATE) 
VALUES (3, '칠팔구', 1, 'chillpalgu@a.com', TO_DATE('2023-08-03', 'YYYY-MM-DD'));

INSERT INTO STUDENT (STUDENT_ID, NAME, GRADE, EMAIL, JOIN_DATE) 
VALUES (4, '십일이', 1, 'shiqile@a.com', TO_DATE('2023-08-04', 'YYYY-MM-DD'));

INSERT INTO STUDENT (STUDENT_ID, NAME, GRADE, EMAIL, JOIN_DATE) 
VALUES (5, '이십이', 1, 'eshipe@a.com', TO_DATE('2023-08-05', 'YYYY-MM-DD'));


----------------------------------------------------------------
CREATE TABLE ENROLLMENT (
    ENROLL_ID       NUMBER PRIMARY KEY,
    STUDENT_ID      NUMBER NOT NULL,
    LECTURE_ID      NUMBER NOT NULL,
    ENROLL_DATE     DATE NOT NULL,
    STATUS          CHAR(1),
    GRADE_SCORE     NUMBER,

    CONSTRAINT FK_ENROLL_STUDENT FOREIGN KEY (STUDENT_ID)
        REFERENCES STUDENT(STUDENT_ID),

    CONSTRAINT FK_ENROLL_LECTURE FOREIGN KEY (LECTURE_ID)
        REFERENCES LECTURE(LECTURE_ID)
);

COMMENT ON COLUMN ENROLLMENT.ENROLL_ID IS '수강기록 고유번호';
COMMENT ON COLUMN ENROLLMENT.STUDENT_ID IS '수강생 ID';
COMMENT ON COLUMN ENROLLMENT.LECTURE_ID IS '강의 ID';
COMMENT ON COLUMN ENROLLMENT.ENROLL_DATE IS '수강 등록일';
COMMENT ON COLUMN ENROLLMENT.STATUS IS '수강 상태';
COMMENT ON COLUMN ENROLLMENT.GRADE_SCORE IS '성적 점수';

INSERT INTO ENROLLMENT (ENROLL_ID, STUDENT_ID, LECTURE_ID, ENROLL_DATE, STATUS, GRADE_SCORE) 
VALUES (1, 1, 101, TO_DATE('2025-08-10', 'YYYY-MM-DD'), 'Y', 90);

INSERT INTO ENROLLMENT (ENROLL_ID, STUDENT_ID, LECTURE_ID, ENROLL_DATE, STATUS, GRADE_SCORE) 
VALUES (2, 2, 102, TO_DATE('2025-08-11', 'YYYY-MM-DD'), 'Y', 85);

INSERT INTO ENROLLMENT (ENROLL_ID, STUDENT_ID, LECTURE_ID, ENROLL_DATE, STATUS, GRADE_SCORE) 
VALUES (3, 3, 103, TO_DATE('2025-08-12', 'YYYY-MM-DD'), 'N', 80);

INSERT INTO ENROLLMENT (ENROLL_ID, STUDENT_ID, LECTURE_ID, ENROLL_DATE, STATUS, GRADE_SCORE) 
VALUES (4, 4, 104, TO_DATE('2025-08-13', 'YYYY-MM-DD'), 'Y', 75);

INSERT INTO ENROLLMENT (ENROLL_ID, STUDENT_ID, LECTURE_ID, ENROLL_DATE, STATUS, GRADE_SCORE) 
VALUES (5, 5, 105, TO_DATE('2025-08-14', 'YYYY-MM-DD'), 'N', 70);



------------------------------------------------------------
